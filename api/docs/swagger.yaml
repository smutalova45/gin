definitions:
  models.Basket:
    properties:
      customer_id:
        type: string
      id:
        type: string
      total_sum:
        type: integer
    type: object
  models.BasketProduct:
    properties:
      basket_id:
        type: string
      id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  models.BasketProductResponse:
    properties:
      basketProducts:
        items:
          $ref: '#/definitions/models.BasketProduct'
        type: array
      count:
        type: integer
    type: object
  models.BasketResponse:
    properties:
      baskets:
        items:
          $ref: '#/definitions/models.Basket'
        type: array
      count:
        type: integer
    type: object
  models.Category:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.CategoryResponse:
    properties:
      category:
        items:
          $ref: '#/definitions/models.Category'
        type: array
      count:
        type: integer
    type: object
  models.CreateBasket:
    properties:
      customer_id:
        type: string
      total_sum:
        type: integer
    type: object
  models.CreateBasketProduct:
    properties:
      basket_id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
    type: object
  models.CreateProduct:
    properties:
      category_id:
        type: string
      name:
        type: string
      original_price:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
    type: object
  models.CreateUser:
    properties:
      cash:
        type: integer
      full_name:
        type: string
      password:
        type: string
      phone:
        type: string
      user_type:
        type: string
    type: object
  models.Product:
    properties:
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
      original_price:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
    type: object
  models.ProductResponse:
    properties:
      count:
        type: integer
      product:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.ProductSellRequest:
    properties:
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    type: object
  models.Response:
    properties:
      data: {}
      description:
        type: string
      statusCode:
        type: integer
    type: object
  models.UpdateBasket:
    properties:
      customer_id:
        type: string
      id:
        type: string
      total_sum:
        type: integer
    type: object
  models.UpdateBasketProduct:
    properties:
      basket_id:
        type: string
      id:
        type: string
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  models.UpdateCategory:
    properties:
      name:
        type: string
    type: object
  models.UpdateProduct:
    properties:
      category_id:
        type: string
      id:
        type: string
      name:
        type: string
      original_price:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
    type: object
  models.UpdateUser:
    properties:
      cash:
        type: integer
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      phone:
        type: string
    type: object
  models.UpdateUserPassword:
    properties:
      id:
        type: string
      new_password:
        type: string
      old_password:
        type: string
    type: object
  models.User:
    properties:
      cash:
        type: integer
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      phone:
        type: string
      user_type:
        type: string
    type: object
  models.UsersResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/models.User'
        type: array
    type: object
info:
  contact: {}
  description: This is a sample server celler server.
  title: Swagger Example API
  version: "1.0"
paths:
  /AddProduct:
    post:
      consumes:
      - application/json
      description: Add a new product based on the provided product information
      parameters:
      - description: Product information
        in: body
        name: productInfo
        required: true
        schema:
          $ref: '#/definitions/models.ProductSellRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Add a new product according to request
      tags:
      - sellingProduct
  /basket:
    get:
      consumes:
      - application/json
      description: get basket list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BasketResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get basket list
      tags:
      - basket
    post:
      consumes:
      - application/json
      description: Creates a new basket
      parameters:
      - description: basket
        in: body
        name: basket
        required: true
        schema:
          $ref: '#/definitions/models.CreateBasket'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new basket
      tags:
      - basket
  /basket/{id}:
    delete:
      consumes:
      - application/json
      description: delete basket
      parameters:
      - description: basket_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete basket
      tags:
      - basket
    get:
      consumes:
      - application/json
      description: get basket by id
      parameters:
      - description: basket
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets basket
      tags:
      - basket
    put:
      consumes:
      - application/json
      description: update basket
      parameters:
      - description: basket_id
        in: path
        name: id
        required: true
        type: string
      - description: basket
        in: body
        name: basket
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBasket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Basket'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update basket
      tags:
      - basket
  /basketProduct:
    post:
      consumes:
      - application/json
      description: Creates a new basketProduct
      parameters:
      - description: basketProduct
        in: body
        name: basketProduct
        required: true
        schema:
          $ref: '#/definitions/models.CreateBasketProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new basketProduct
      tags:
      - basketProduct
  /basketProduct/{id}:
    delete:
      consumes:
      - application/json
      description: delete basketProduct
      parameters:
      - description: basketProduct_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete basketProduct
      tags:
      - basketProduct
  /basketProduct{id}:
    get:
      consumes:
      - application/json
      description: get basketProduct by id
      parameters:
      - description: basketProduct
        in: path
        name: id
        required: true
        type: string
      - description: basketproduct
        in: body
        name: basketProduct
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBasketProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets basketProduct
      tags:
      - basketProduct
  /basketProducts:
    get:
      consumes:
      - application/json
      description: get basketProducts list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BasketProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get basketProducts list
      tags:
      - basketProduct
  /basketProducts/{id}:
    put:
      consumes:
      - application/json
      description: update basketProducts
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      - description: basketProduct
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBasketProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BasketProduct'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update basketProducts
      tags:
      - basketProduct
  /categories:
    get:
      consumes:
      - application/json
      description: get category list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get category list
      tags:
      - category
  /category:
    post:
      consumes:
      - application/json
      description: Creates a new category
      parameters:
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new category
      tags:
      - category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: delete category
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      - description: category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete category
      tags:
      - category
    get:
      consumes:
      - application/json
      description: get catgory by id
      parameters:
      - description: category
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets category
      tags:
      - category
    put:
      consumes:
      - application/json
      description: update category
      parameters:
      - description: category_id
        in: path
        name: id
        required: true
        type: string
      - description: category
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Category'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update category
      tags:
      - category
  /product:
    post:
      consumes:
      - application/json
      description: create a new product
      parameters:
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new product
      tags:
      - product
  /product/{id}:
    delete:
      consumes:
      - application/json
      description: delete product
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: get product by ID
      parameters:
      - description: product
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets product
      tags:
      - product
    put:
      consumes:
      - application/json
      description: update product
      parameters:
      - description: product_id
        in: path
        name: id
        required: true
        type: string
      - description: product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update product
      tags:
      - product
  /products:
    get:
      consumes:
      - application/json
      description: get product list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get product list
      tags:
      - product
  /sellproduct:
    post:
      consumes:
      - application/json
      description: Sell a product based on the provided user and product information
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      - description: Product information
        in: body
        name: productInfo
        required: true
        schema:
          $ref: '#/definitions/models.ProductSellRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Sell a product
      tags:
      - sellingProduct
  /user:
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: user
        in: body
        name: user
        schema:
          $ref: '#/definitions/models.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Creates a new user
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: get user by ID
      parameters:
      - description: user
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Gets user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: update user password
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update user password
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update user
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: string
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Update user
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: get user list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UsersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Response'
      summary: Get user list
      tags:
      - user
swagger: "2.0"
